#include "TDNLIB.h"
#include "Part.h"

//*****************************************************************************************************************************
//
//				パート担当
//
//*****************************************************************************************************************************

//*****************************************************************************************************************************
//			メイン
//*****************************************************************************************************************************
void PartManager::Part::Main::Initialize()
{

}

void PartManager::Part::Main::Update()
{

}

void PartManager::Part::Main::Render()
{

}


//*****************************************************************************************************************************
//			ゲームクリア時
//*****************************************************************************************************************************
void PartManager::Part::GameClear::Initialize()
{

}

void PartManager::Part::GameClear::Update()
{

}

void PartManager::Part::GameClear::Render()
{
	// 黒い1枚絵
	tdnPolygon::Rect(0, 0, tdnSystem::GetScreenSize().right, tdnSystem::GetScreenSize().bottom, RS::COPY, 0x80000000);

	tdnText::Draw(320, 320, 0xffffffff, "ゲームクリアー！");
}



//*****************************************************************************************************************************
//			ゲームオーバー
//*****************************************************************************************************************************
void PartManager::Part::GameOver::Initialize()
{

}

void PartManager::Part::GameOver::Update()
{

}

void PartManager::Part::GameOver::Render()
{
	// 黒い1枚絵
	tdnPolygon::Rect(0, 0, tdnSystem::GetScreenSize().right, tdnSystem::GetScreenSize().bottom, RS::COPY, 0x80000000);

	tdnText::Draw(320, 320, 0xffffffff, "ゲームオーバー");
}



//*****************************************************************************************************************************
//
//				パート管理
//
//*****************************************************************************************************************************
//*****************************************************************************************************************************
//		初期化・解放
//*****************************************************************************************************************************
//------------------------------------------------------
//		初期化
//------------------------------------------------------
PartManager::PartManager()
{
	part_worker = new Part::Main(this);
	part_worker->Initialize();
}

//------------------------------------------------------
//		解放
//------------------------------------------------------
PartManager::~PartManager()
{
	SAFE_DELETE(part_worker);
}

//*****************************************************************************************************************************
//		更新・描画
//*****************************************************************************************************************************
//------------------------------------------------------
//		更新
//------------------------------------------------------
void PartManager::Update()
{
	part_worker->Update();
}

//------------------------------------------------------
//		描画
//------------------------------------------------------
void PartManager::Render()
{
	part_worker->Render();
}



void PartManager::ChangePart(PART p)
{
	if (part_worker)delete part_worker;

	switch (p)
	{
	case PART::MAIN:
		part_worker = new Part::Main(this);
		break;
	case PART::GAME_CLEAR:
		part_worker = new Part::GameClear(this);
		break;
	case PART::GAME_OVER:
		part_worker = new Part::GameOver(this);
		break;
	}
	part_worker->Initialize();
}